apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: golang2
  name: dep-golang2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: golang2
  template:
    metadata:
      labels:
        app: golang2
    spec:
      serviceAccount: sa-golang2
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 1000
      #   runAsNonRoot: true
      containers:
      - name: golang2
        image: golang2:tgd
        # image: achoistic98/tgd-golang:latest
        # imagePullPolicy: Always
        # securityContext:
        #   allowPrivilegeEscalation: false
        #   capabilities:
        #     drop:
        #       - all
        #     add: ["DAC_OVERRIDE", "DAC_READ_SEARCH", "CAP_SYS_ADMIN", "NET_BIND_SERVICE"]
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /app/cmd
          name: pvc-golang2
      volumes:
        - name: pvc-golang2
          persistentVolumeClaim:
            claimName: pvc-golang2
---
apiVersion: v1
kind: Service
metadata:
  name: svc-golang2
spec:
  selector:
    app: golang2
  type: ClusterIP
  ports:
    - port: 8080