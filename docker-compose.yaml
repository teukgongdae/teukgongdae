version: '3'
services:
  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - /app/node_modules
      - ./frontend:/app
    stdin_open: true
    ports:
      - "3000:3000"

  mysql:
    build:
      dockerfile: Dockerfile
      context: ./mysql
    restart: no
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql
      - ./mysql/scripts:/docker-entrypoint-initdb.d/
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE}
      TZ: Asia/Seoul

  golang:
    build:
      dockerfile: Dockerfile   
      context: ./golang
    volumes:
      - ./golang/cmd:/app/cmd
    ports:
      - "8080:8080"

  # space:
  #   build:
  #     dockerfile: Dockerfile   
  #     context: ./space
  #   ports:
  #     - "8081:8081"

  # member:
  #   build:
  #     dockerfile: Dockerfile   
  #     context: ./member
  #   ports:
  #     - "8080:8080

  # mysql-space:
  #   build:
  #     dockerfile: Dockerfile.space
  #     context: ./mysql
  #   restart: no
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./mysql/space_data:/var/lib/mysql
  #     - ./mysql/scripts/space.sql:/docker-entrypoint-initdb.d/
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${SPACE_DB_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${SPACE_DB_NAME}
  #     TZ: Asia/Seoul

  # mysql-member:
  #   build:
  #     dockerfile: Dockerfile.member
  #     context: ./mysql
  #   restart: no
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./mysql/member_data:/var/lib/mysql
  #     - ./mysql/scripts/member.sql:/docker-entrypoint-initdb.d/
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MEMBER_DB_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MEMBER_DB_NAME}
  #     TZ: Asia/Seoul