plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.tgd'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.8")
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java:8.0.27'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.json:json:20210307'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'com.google.firebase:firebase-admin:8.2.0'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// hot reloading
sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    options.fork = true
    options.forkOptions.jvmArgs.add('-Dfile.encoding=UTF-8')
}